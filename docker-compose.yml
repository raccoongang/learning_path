version: "2"
services:
  db:
    image: postgres:11.11
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - ./.docker/db.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: backend
    restart: always
    command: python ./learning_path/manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    env_file:
      - ./.docker/db.env
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    command: bash -c "yarn install && HOST=0.0.0.0 PORT=80 yarn start"
    volumes:
      - ./frontend:/code:consistent
    env_file:
      - ./.docker/node.env
    environment:
      - BASE_DIR=/code
    ports:
      - 80:80
    links:
      - backend
    restart: always
    stdin_open: true
    tty: true


volumes:
  db_data:
